<!DOCTYPE html>
<html lang="es">
<head>
  <title>Ingreso Materia Prima</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <!-- SweetAlert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      margin: 20px;
      background-color: #f6f8fa;
      color: #24292e;
    }

    .fixed-header {
      display: flex;
      justify-content: flex-start;
      align-items: center;
      position: sticky;
      top: 0;
      background-color: #fff;
      padding: 10px 0;
      z-index: 1000;
      border-bottom: 1px solid #d1d5da;
      box-shadow: 0 1px 3px rgba(27,31,35,0.12);
      margin-bottom: 20px;
    }

    .table-container {
      max-height: 300px;
      overflow-y: auto;
      margin-bottom: 80px;
      border: 1px solid #d1d5da;
      border-radius: 6px;
      background-color: #fff;
      box-shadow: 0 1px 3px rgba(27,31,35,0.12), 0 8px 24px rgba(27,31,35,0.12);
      position: relative;
    }

    .table-container thead th {
      position: sticky;
      top: 0;
      background-color: #fff;
      z-index: 1;
    }

    .form-header {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 20px;
      background-color: #fff;
      padding: 20px;
      border: 1px solid #d1d5da;
      border-radius: 6px;
      box-shadow: 0 1px 3px rgba(27,31,35,0.12);
      margin-bottom: 20px;
    }

    .data-table {
      width: 100%;
      border-collapse: collapse;
    }

    .data-table th,
    .data-table td {
      border: 1px solid #e1e4e8;
      padding: 4px;
      text-align: left;
      vertical-align: middle;
      font-size: 12px;
    }

    .data-table th {
      background-color: #f6f8fa;
      font-weight: bold;
      text-align: center;
      padding: 8px;
    }

    input, select {
      width: 100%;
      padding: 4px;
      margin: 0;
      border: 1px solid #d1d5da;
      border-radius: 6px;
      font-size: 12px;
      background-color: #fafbfc;
      color: #24292e;
      height: 30px;
      box-sizing: border-box;
    }

    .number-input {
      width: 60px;
      padding: 2px;
      height: 30px;
      box-sizing: border-box;
    }

    .sku {
      background-color: #e1e4e8;
      color: #24292e;
      pointer-events: none;
    }

    .add-row-button {
      background-color: #2ea44f;
      color: white;
      border: none;
      border-radius: 50%;
      width: 30px;
      height: 30px;
      font-size: 20px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 1px 3px rgba(27,31,35,0.12);
    }

    .remove-row-button {
      background-color: #dc3545;
      color: white;
      border: none;
      border-radius: 50%;
      width: 20px;
      height: 20px;
      font-size: 14px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0 auto;
    }

    .fixed-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      background-color: #fff;
      padding: 10px 20px;
      border-top: 1px solid #d1d5da;
      box-shadow: 0 -1px 3px rgba(27,31,35,0.12);
      z-index: 1000;
      box-sizing: border-box;
    }

    .footer-buttons {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-left: auto;
    }

    .fixed-footer button {
      background-color: #2ea44f;
      color: #fff;
      border: none;
      padding: 10px 20px;
      border-radius: 6px;
      cursor: pointer;
      font-size: 14px;
      box-sizing: border-box;
    }

    .fixed-footer button:hover {
      background-color: #2c974b;
    }

    .swal2-popup {
      font-size: 14px !important;
      padding: 16px !important;
      background-color: #fff !important;
      color: #24292e !important;
      border: 1px solid #d1d5da !important;
      border-radius: 6px !important;
      width: 300px !important;
    }

    .swal2-title {
      font-size: 18px !important;
    }

    .swal2-content {
      font-size: 14px !important;
    }

    .swal2-styled.swal2-confirm {
      background-color: #2ea44f !important;
      border: 1px solid rgba(27,31,35,0.15) !important;
      color: #fff !important;
      padding: 6px 12px !important;
      font-size: 12px !important;
    }

    .swal2-styled.swal2-cancel {
      background-color: #d1d5da !important;
      color: #24292e !important;
      padding: 6px 12px !important;
      font-size: 12px !important;
    }
  </style>
</head>
<body>
  <div class="fixed-header">
    <h1 style="font-size: 18px; margin: 0; font-weight: normal;">Selecciona Productos</h1>
  </div>

  <form id="formIngreso">
    <div class="form-header">
      <div>
        <label for="fecha">Fecha:</label>
        <input type="date" id="fecha" required>
      </div>
      <div>
        <label for="guia">Documento de Ingreso:</label>
        <input type="text" id="guia" placeholder="N° documento" minlength="3" required>
      </div>
    </div>

    <div class="table-container">
      <table class="data-table">
        <thead>
          <tr>
            <th>SKU</th>
            <th>Producto</th>
            <th>Cantidad Cajas</th>
            <th>Pallets</th>
            <th>Ubicación</th>
            <th>Eliminar</th>
          </tr>
        </thead>
        <tbody id="productosTableBody"></tbody>
      </table>
    </div>
  </form>

  <div class="fixed-footer">
    <div>
      <button type="button" class="add-row-button" onclick="agregarFila()">+</button>
    </div>
    <div class="footer-buttons">
      <button type="button" onclick="enviarFormulario()">Guardar</button>
    </div>
  </div>

  <script>
    let ubicacionesDisponibles = [];
    let ubicacionesOriginales = [];
    const filas = [];

    // Función para establecer la fecha actual en formato YYYY-MM-DD
    function establecerFechaActual() {
        const fechaHoy = new Date();
        const dia = String(fechaHoy.getDate()).padStart(2, '0');
        const mes = String(fechaHoy.getMonth() + 1).padStart(2, '0');
        const anio = fechaHoy.getFullYear();

        const fechaFormateada = `${anio}-${mes}-${dia}`;
        document.querySelectorAll('input[type="date"]').forEach(input => {
            input.value = fechaFormateada;
        });
    }

    document.addEventListener("DOMContentLoaded", () => {
        google.script.run
            .withSuccessHandler((result) => {
                ubicacionesDisponibles = result.opciones;
                ubicacionesOriginales = [...result.opciones];
                agregarFila();
            })
            .obtenerUbicacionesDisponibles();

        establecerFechaActual();
    });

    function actualizarUbicaciones() {
        const ubicacionesSeleccionadas = Array.from(document.querySelectorAll('.ubicacion'))
            .map(select => select.value)
            .filter(value => value !== "");

        const ubicacionesDisponiblesActuales = ubicacionesOriginales.filter(
            ubicacion => !ubicacionesSeleccionadas.includes(ubicacion)
        );

        document.querySelectorAll('.ubicacion').forEach(select => {
            const valorActual = select.value;
            select.innerHTML = '<option value="" disabled selected>-- Selecciona una ubicación --</option>';

            if (valorActual) {
                const opt = document.createElement("option");
                opt.value = valorActual;
                opt.textContent = valorActual;
                opt.selected = true;
                select.appendChild(opt);
            }

            ubicacionesDisponiblesActuales.forEach(ubicacion => {
                if (ubicacion !== valorActual) {
                    const opt = document.createElement("option");
                    opt.value = ubicacion;
                    opt.textContent = ubicacion;
                    select.appendChild(opt);
                }
            });
        });
    }

    function agregarFila() {
        const tbody = document.getElementById('productosTableBody');
        const newRow = document.createElement('tr');
        const filaIndex = filas.length;

        newRow.innerHTML = `
            <td>
                <input type="text" class="sku" readonly>
            </td>
            <td>
                <select class="producto" required onchange="actualizarSKU(this)">
                    <option value="" disabled selected>-- Selecciona un producto --</option>
                </select>
            </td>
            <td>
                <input type="number" class="cantidad number-input" min="1" required>
            </td>
            <td>
                <input type="number" class="pallets number-input" value="0" min="0" required>
            </td>
            <td>
                <select class="ubicacion" required onchange="actualizarUbicaciones()">
                    <option value="" disabled selected>-- Selecciona una ubicación --</option>
                </select>
            </td>
            <td style="text-align: center;">
                <button type="button" class="remove-row-button" onclick="eliminarFila(${filaIndex})">×</button>
            </td>
        `;
        tbody.appendChild(newRow);
        filas.push(newRow);

        // Cargar opciones de productos
        google.script.run
            .withSuccessHandler((result) => {
                cargarOpcionesEnSelector(newRow.querySelector('.producto'), result.opciones);
            })
            .obtenerOpcionesSMT('producto', 'IngresoMP');

        actualizarUbicaciones();
    }

    function eliminarFila(index) {
        if (document.getElementById('productosTableBody').children.length > 1) {
            filas[index].remove();
            filas.splice(index, 1);
            actualizarUbicaciones();
        } else {
            Swal.fire('Error', 'Debe mantener al menos una fila', 'error');
        }
    }

    function cargarOpcionesEnSelector(select, opciones) {
        const valorActual = select.value;
        select.innerHTML = '<option value="" disabled selected>-- Selecciona una opción --</option>';
        
        opciones.forEach(opcion => {
            const opt = document.createElement("option");
            opt.value = opcion;
            opt.textContent = opcion;
            if (opcion === valorActual) {
                opt.selected = true;
            }
            select.appendChild(opt);
        });
    }

    function actualizarSKU(selectElement) {
        const fila = selectElement.closest('tr');
        const productoSeleccionado = selectElement.value;
        const skuInput = fila.querySelector('.sku');

        if (productoSeleccionado) {
            google.script.run
                .withSuccessHandler((sku) => {
                    skuInput.value = sku;
                })
                .obtenerSKUSMT(productoSeleccionado);
        } else {
            skuInput.value = '';
        }
    }

    function enviarFormulario() {
        const productos = [];
        filas.forEach(fila => {
            productos.push({
                sku: fila.querySelector('.sku').value,
                producto: fila.querySelector('.producto').value,
                cantidad: fila.querySelector('.cantidad').value,
                pallets: fila.querySelector('.pallets').value,
                ubicacion: fila.querySelector('.ubicacion').value
            });
        });

        const datos = {
            fecha: document.getElementById("fecha").value,
            guia: document.getElementById("guia").value,
            productos: productos
        };

        if (!validarDatos(datos)) {
            return false;
        }

        Swal.fire({
            title: 'Confirmación',
            text: `¿Guardar ingreso de ${productos.length} productos?`,
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Guardar',
            cancelButtonText: 'Cancelar',
            confirmButtonColor: '#2ea44f',
            cancelButtonColor: '#d1d5da'
        }).then((result) => {
            if (result.isConfirmed) {
                google.script.run
                    .withSuccessHandler((response) => {
                        if (response.success) {
                            Swal.fire('¡Guardado!', 'Los productos se ingresaron correctamente.', 'success')
                                .then(() => {
                                    document.getElementById('formIngreso').reset();
                                    document.getElementById('productosTableBody').innerHTML = '';
                                    filas.length = 0;
                                    google.script.run
                                        .withSuccessHandler((result) => {
                                            ubicacionesDisponibles = result.opciones;
                                            ubicacionesOriginales = [...result.opciones];
                                            agregarFila();
                                        })
                                        .obtenerUbicacionesDisponibles();
                                    establecerFechaActual();
                                });
                        } else {
                            Swal.fire('Error', response.message || 'Error al guardar los datos', 'error');
                        }
                    })
                    .withFailureHandler((error) => {
                        Swal.fire('Error', error.message || 'Error al procesar la solicitud', 'error');
                    })
                    .guardarDatosIngresoSMT(datos);
            }
        });

        return false;
    }

    function validarDatos(datos) {
        if (!datos.fecha || !datos.guia || !datos.productos.length) {
            Swal.fire('Error', 'Todos los campos son requeridos', 'error');
            return false;
        }

        for (let producto of datos.productos) {
            if (!producto.sku || !producto.producto || !producto.cantidad || !producto.ubicacion) {
                Swal.fire('Error', 'Complete todos los campos de productos', 'error');
                return false;
            }
            if (producto.pallets < 0) {
                Swal.fire('Error', 'El valor de Pallets debe ser 0 o mayor', 'error');
                return false;
            }
        }

        return true;
    }
  </script>
</body>
</html>